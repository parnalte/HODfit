[General]
# Name to identify the sample used. This will just appear in the results
# files (.txt and .json) for later reference
sample_name = Z03Ms09.50

# Set to True if we want to continue from a saved chain from previous MCMC run
# (e.g. if there was a problem in the run or if convergence was not attained).
# The filename of the previous chain will be taken from the standard output filenames,
# and it will be overwritten (so make a backup if you want). However, the result
# (written to that same file) should contain the *full* chain (from the old+new runs).
# The user should make sure that the properties of the previous run match those
# defined here for the new run.
restart_chain = False

[Data]
# This section contains info. about the wp data which we want to fit
wpfile = Z03-Ms09.50_alhmuffitqreg_wp.dat
wp_cov_file = Z03-Ms09.50_alhmuffitqreg_wpcovmat.dat
rpmin = 0.01
rpmax = 10.0

# Define whether to use the full covariance matrix or just the diagonal:
#  use_full_covmatrix = True: use the full covariance matrix in wp_cov_file
#  use_full_covmatrix = False: use only the diagonal of the matrix.
#                              Note this will probably underestimate the
#                              errors on the parameters
use_full_covmatrix = True

# Integral constraint should correspond to the *wp* already
integral_constraint = 1.46278

[DataDens]
# This section contains info. about the galaxy density data and whether to
# use it in the fit
# Options:
# use_gal_dens = 0: Do not use density in the fit
# use_gal_dens = 1: Use density in the fit, using Gaussian in density
# use_gal_dens = 2: Use density in the fit, using Gaussian in log-density
use_gal_dens = 2

# Only used if use_gal_dens = 1:
gal_dens = 0.010
gal_dens_error = 0.001

# Only used if use_gal_dens = 2:
gal_logdens = -1.63026
gal_logdens_error = 0.0178261

[Cosmology]
# This section contains cosmological parameters + details of the calculation
# of the power spectra (either using CAMB or file with pre-computed values)
redshift = 0.35
omega_matter = 0.3089
omega_lambda = 0.6911
omega_baryon = 0.0486
hubble_constant = 67.74

use_camb = True
# If use_camb=True, will use CAMB to compute the needed P(k) on the fly.
# Extra parameters to define that calculation:
# A_s, n_s for the initial power spectrum
init_power_amplitude = 2.142e-9
init_power_spect_index = 0.9667
# Details of the transfer function calculations
camb_halofit_version = mead
camb_kmax = 200.0
camb_k_per_logint = 30

# If use_camb=False, will use P(k) read from the following files.
# These should match the cosmological parameters and redshift given here!
# File that contains the *linear* P(k) for matter at z=0
pk_linear_z0 = Planck15_linz0_matterpower.dat
# File that contains the full/non-linear P(k) for matter at z=redshift
pk_matter_z = Planck15_nonlin_z0p35_matterpower.dat


[HODModel]
# Section relating to the HOD model we want to fit to the data and its
# parameters

# Possible HOD_type are:
# 1: Kravtsov (2004) model (3 parameters)
# 2: Zheng (2005) model (5 parameters)
# 3: Zheng (2005) model with M0=Mmin (4 parameters)
HOD_type = 1

# Define initial values for parameters
# (to obtain best-fit through maximisation)
logMmin_init = 11.331359
logM1_init = 12.69514708
alpha_init = 1.15967839
# Only used if HOD_type = 2 or =3:
logSiglogM_init = -0.3
# Only used if HOD_type = 2:
logM0_init = 12.0

# Set parameters that define the priors on the variables
# prior_type:
#   - 0 for Uniform (defined by min, max)
#   - 1 for Gaussian (defined by mean, std)

# logMmin
logMmin_prior = 1
logMmin_min = 6.0
logMmin_max = 15.0
logMmin_mean = 11.3
logMmin_std = 0.3

# logM1
logM1_prior = 1
logM1_min = 6.0
logM1_max = 15.0
logM1_mean = 12.75
logM1_std = 0.3

# alpha
alpha_prior = 1
alpha_min = 0.0
alpha_max = 2.5
alpha_mean = 1.2
alpha_std = 0.8

# logsiglogM
logsiglogM_prior = 0
logsiglogM_min = -3.0
logsiglogM_max = 1.0
logsiglogM_mean = 1.0
logsiglogM_std = 2.0

# logM0
logM0_prior = 0
logM0_min = 6.0
logM0_max = 15.0
logM0_mean = 11.0
logM0_std = 6.0


[ModNFWModel]
# This section contains parameters related to the modified NFW profile,
# for the case in which we want to include these in the fit (in addition to
# the HOD model)
# The two parameters that we can choose to fit are f_gal and gamma


# Whether we want to include the parameter f_gal in the fit.
# If fit_f_gal = False, we will keep it fixed at f_gal=1 (the NFW value)
fit_f_gal = True

# The following parameters are relevant only if fit_f_gal = True :
# We actually fit for log10(f_gal), so we fix init/limits for this
log_fgal_init = 0.0

log_fgal_prior = 1
log_fgal_min = -2.0
log_fgal_max = 2.0
log_fgal_mean = 0.0
log_fgal_std = 2.0

# Whether we want to include the parameter gamma in the fit.
# If fit_gamma = False, we will keep it fixed at gamma=1 (the NFW value)
fit_gamma = True

# The following parameters are relevant only if fit_gamma = True:
gamma_init = 1.0

gamma_prior = 0
gamma_min = -0.5
gamma_max = 3.0
gamma_mean = 1.0
gamma_std = 1.0


[BestFitcalc]
# Whether to find the best fit via a straightforward minimization before
# running the MCMC.
# If using find_best_fit = False and mcmc_init_type = 1 , proceed with great
# caution, as will use the '_init' values of the parameters to initialize
# the MCMC.
do_best_fit_minimization = True

# Options to control the actual minimization
best_fit_minim_method = Powell
best_fit_minim_xtol = 1e-3
best_fit_minim_ftol = 1e-3
best_fit_minim_maxiter = 100



[MCMCcalc]
# This section relates to the properties of the MCMC run
number_walkers = 12
number_iterations = 50
threads = 6

# How to distribute the starting points of the walkers for the MCMC run:
# (Note: be careful when using mcmc_init_type=0 with Gaussian priors, as initial
#  positions can go outside of valid ranges)
#   mcmc_init_type = 0: follow prior
#   mcmc_init_type = 1: ball around the best-fit values
mcmc_init_type = 0

# Only needed if mcmc_init_type = 1. Should have the correct number
# of dimensions, according to HOD_type + fit_f_gal + fit_gamma
mcmc_init_ball = 0.3  0.3  0.3  1.0  1.0

[MCMCanalysis]
# Include here for basic analysis performed by this programme.
# It's probably wise to revise this in view of the chain and re-do the final
# analysis
burn_in_iterations = 20

# This can be a list of confidence intervals to calculate
# Remember that for Gaussian case:
# 1-sigma, 2-sigma, 3-sigma = 68.3, 95.4, 99.7
conf_intervals = 68.3   95.4

# How many samples to draw in the plot comparing chain to data
n_samp_comparison_plot = 10


[HaloModelCalc]
# This section contains details concerning the halo model, in particular
# the models used for the halo mass function and the halo bias function,
# the way in which the integrals over halo mass are done, and the halo
# exclusion model to use for the computation of the 2h term
#

# Define the particular models used:
#
# Halo Mass Function
# Valid values are: ['Sheth2001', 'Watson2013-FOF']
mass_function_model = 'Sheth2001'

# Bias function
# Valid values are: ['Sheth2001', 'Tinker2005', 'Tinker2010']
bias_function_model = 'Tinker2005'

# Delta for halo mass definition
# Only relevant if:
#   halo_bias_function = ['Tinker2010']
delta_halo_mass = 200

# Define the mass array used for integrals
logMmin = 6.0
logMmax = 17.0
logMstep = 0.01

# Possible values of halo_exclusion_model are:
# 0: no halo exclusion is taken into account
# 1: use model from Zheng et al. (2004)
# 2: use model from Tinker et al. (2005) [more accurate, slower]
halo_exclusion_model = 1

# File containing a pre-computed grid of Fourier-space ModNFW profiles
# as function of k, conc, gamma
# Only actually used if we fit for gamma (i.e., when needing values
# gamma !=1)
# If the file given is not valid, will use the more costly direct computation
# of the profile
fourier_prof_grid_file = prof_grid_v0.npz


[WpCalc]
# This section defines some parameters that control the numerical way
# in which the model wp are computed
nr = 30
npi = 30
pimin = 0.001
pimax = 400.0
